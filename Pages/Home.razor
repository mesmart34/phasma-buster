@page "/"
@using PhasmaBuster.Data.Common
@using System.Globalization
@using PhasmaBuster.Data.Evidences

<div class="win-grid">
    <div class="d-flex flex-wrap justify-content-evenly">
        @foreach (var modelGhost in _model.Ghosts)
        {
            var color = "color: rgba(255, 255, 255, 0.5)";
            @if (!IsVisible(modelGhost))
            {
                continue;
            }
            
            <div class="m-1 ghost-radius" style="width: 30rem; height: 12rem;">
                <div class="win-btn ghost-radius ghost-background" id="9" style="width: 100%; height: 100%; padding: 0;">
                    <div class="row">
                        <div class="col-6">
                            <RadzenStack Orientation="Orientation.Vertical"
                                         JustifyContent="JustifyContent.SpaceBetween"
                                         Style="background: transparent;">
                                <div class="my-auto w-100 text-center">
                                    <RadzenText Text="@modelGhost.Name"
                                                TextStyle="TextStyle.H5"
                                                Style="@color"
                                                class="noselect"/>
                                </div>
                                <div class="my-auto w-100 d-flex justify-content-center">
                                    @foreach (var evidence in modelGhost.Evidences[EvidenceType.Standart].Cast<StandardEvidence>())
                                    {
                                        <RadzenIcon Icon="@(evidence.IconName)"
                                                    class="mx-2 noselect"
                                                    title="@Localization[evidence.Name]"/>
                                    }
                                </div>
                                <RadzenPanel class="my-auto panel">
                                    <div class="d-flex justify-content-between">
                                        <div class="d-flex" style="font-size: 0.9rem">
                                            <RadzenIcon Icon="psychology_alt" class="noselect"/>
                                                <p class="noselect">
                                                    @modelGhost.SanityEvidence?.Value
                                                    %
                                                </p>
                                        </div>
                                        <div class="d-flex" style="font-size: 0.9rem">
                                            <RadzenIcon Icon="directions_run" class="noselect"/>
                                                <p class="noselect">
                                                    @modelGhost.SpeedEvidence?.Values.FirstOrDefault()?.Value
                                                </p>
                                            <RadzenIcon Icon="volume_up" class="noselect"/>
                                        </div>
                                    </div>
                                </RadzenPanel>
                            </RadzenStack>
                        </div>
                        <div class="col-6">
                            <RadzenPanel class="panel">
                                <div style="height: 8rem; overflow-y: auto;">
                                    @foreach (var evidenceGroup in modelGhost.Evidences
                                                  .GroupBy(x => x.Key)
                                                  .OrderBy(x => x.Key)
                                                  .Where(x => x.Key != EvidenceType.Standart)
                                                  .ToDictionary(x => x.Key, x => x.SelectMany(x => x.Value)))
                                    {
                                        <div style="font-size: 1.0rem;">
                                            <p class="noselect">
                                                @Localization[evidenceGroup.Key.GetCaption()]
                                            </p>
                                        </div>
                                        foreach (var hiddenEvidence in evidenceGroup.Value)
                                        {
                                            <div style="font-size: 0.9rem; @color">
                                                <p class="noselect description-text">
                                                    - @hiddenEvidence.Description?.Text
                                                </p>
                                                @if (!string.IsNullOrEmpty(hiddenEvidence.Description?.FilePath))
                                                {
                                                    switch (hiddenEvidence.Description.EvidenceDescriptionType)
                                                    {
                                                        case EvidenceDescriptionType.Video:
                                                            <RadzenIcon Icon="videocam" class="noselect"/>
                                                            break;
                                                        case EvidenceDescriptionType.Audio:
                                                            <audio id="sound" src="@($"/media/{hiddenEvidence.Description.FilePath}")"></audio>
                                                            <RadzenIcon Icon="volume_up"
                                                                        class="noselect"
                                                                        @onclick="@(async () => await Js.InvokeAsync<string>("PlayAudio", "sound"))"/>
                                                            break;
                                                        case EvidenceDescriptionType.Picture:
                                                            <RadzenIcon Icon="image" class="noselect"/>
                                                            break;
                                                    }
                                                }
                                            </div>
                                            <br/>
                                        }
                                    }
                                </div>
                            </RadzenPanel>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>