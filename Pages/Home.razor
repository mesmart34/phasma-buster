@page "/"
@using PhasmaBuster.Data.Common
@using System.Globalization

<div>
    <div class="grid">
        @foreach (var modelGhost in _model.Ghosts)
        {
            @if (!IsVisible(modelGhost))
            {
                continue;
            }
            <RadzenPanel Style="height: 12rem; max-width: 35rem;" class="m-1">
                <div class="row">
                    <div class="col-6">
                        <RadzenStack Orientation="Orientation.Vertical"
                                     JustifyContent="JustifyContent.SpaceBetween">
                            <div class="my-auto w-100 text-center">
                                <RadzenText Text="@modelGhost.Name"
                                            TextStyle="TextStyle.H5"/>
                            </div>
                            <div class="my-auto w-100 d-flex justify-content-center">
                                @foreach (var evidence in modelGhost.Evidences[EvidenceType.Standard])
                                {
                                    if (evidence.Name != null)
                                    {
                                        <RadzenIcon Icon="@(evidence.IconName)"
                                                    class="mx-2"
                                                    title="@Localization[evidence.Name]"/>
                                    }
                                }
                            </div>
                            <RadzenPanel class="my-auto">
                                <div class="d-flex justify-content-between">
                                    <div class="d-flex" style="font-size: 0.9rem">
                                        <RadzenIcon Icon="psychology_alt"/>
                                        @modelGhost.SanityValues?.FirstOrDefault()
                                        %
                                    </div>
                                    <div class="d-flex" style="font-size: 0.9rem">
                                        <RadzenIcon Icon="directions_run"/>
                                        @modelGhost.SpeedValues?.FirstOrDefault()
                                        <RadzenIcon Icon="volume_up"/>
                                    </div>
                                </div>
                            </RadzenPanel>
                        </RadzenStack>
                    </div>
                    <div class="col-6">
                        <RadzenPanel>
                            <div style="height: 8rem; overflow-y: auto;">
                                @foreach (var evidenceGroup in modelGhost.Evidences
                                    .GroupBy(x => x.Key)
                                    .OrderBy(x => x.Key)
                                    .Where(x => x.Key != EvidenceType.Standard)
                                    .ToDictionary(x => x.Key, x => x.SelectMany(x => x.Value)))
                                {
                                    <div style="font-size: 1.0rem;">@Localization[evidenceGroup.Key.GetCaption()]</div>
                                    foreach (var hiddenEvidence in evidenceGroup.Value)
                                    {
                                        <div style="font-size: 0.9rem">
                                            - @hiddenEvidence.Description?.Text
                                            @if (!string.IsNullOrEmpty(hiddenEvidence.Description?.FilePath))
                                            {
                                                switch (hiddenEvidence.Description.EvidenceDescriptionType)
                                                {
                                                    case EvidenceDescriptionType.Video:
                                                        <RadzenIcon Icon="videocam"/>
                                                        break;
                                                    case EvidenceDescriptionType.Audio:
                                                        <audio id="sound" src="@($"/media/{hiddenEvidence.Description.FilePath}")"></audio>
                                                        <RadzenIcon Icon="volume_up"
                                                                    @onclick="@(async () => await Js.InvokeAsync<string>("PlayAudio", "sound"))"/>
                                                        break;
                                                    case EvidenceDescriptionType.Picture:
                                                        <RadzenIcon Icon="image"/>
                                                        break;
                                                }
                                            }
                                        </div>
                                        <br/>
                                    }
                                }
                            </div>
                        </RadzenPanel>
                    </div>
                </div>
            </RadzenPanel>
        }
    </div>
</div>